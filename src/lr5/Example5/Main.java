package lr5.Example5;

public class Main {
    public static void main(String[] args) {
        Task5 task = new Task5(21);
        System.out.println("Число = " + task.PrintInt());

        //присвоение значения полю через метод с аргументом
        task.set(15);
        System.out.println("Число = " + task.PrintInt());

        //присвоение значения больше 100 полю через метод с аргументом
        task.set(125);
        System.out.println("Число = " + task.PrintInt());

        //присвоение значения меньше 0 полю через метод с аргументом
        task.set(-15);
        System.out.println("Число = " + task.PrintInt());

        //присвоение значения полю через метод без аргуметов
        task.set();
        System.out.println("Число = " + task.PrintInt());
    }
}

//        Напишите программу с классом, у которого есть закрытое целочисленное поле.
//        Значение полю присваивается с помощью открытого метода. Методу
//        аргументом может передаваться целое число, а также метод может вызываться
//        без аргументов. Если методы вызывается без аргументов, то поле получает
//        нулевое значение. Если метод вызывается с целочисленным аргументом, то это
//        значение присваивается полю. Однако если переданное аргументом методу
//        значение превышает 100, то значением полю присваивается число 100.
//        Предусмотрите в классе конструктор, который работает по тому же принципу
//        что и метод для присваивания значения полю. Также в классе должен быть
//        метод, позволяющий проверить значение поля.
